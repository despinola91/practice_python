# Exercise:
# https://www.practicepython.org/exercise/2014/07/05/18-cows-and-bulls.html

# Randomly generate a 4-digit number. Ask the user to guess a 4-digit number. For every digit that the user guessed correctly in the correct place, they have a “cow”. 
# For every digit the user guessed correctly in the wrong place is a “bull.” 
# Every time the user makes a guess, tell them how many “cows” and “bulls” they have. Once the user guesses the correct number, the game is over. Keep track of the number of guesses the user makes throughout teh game and tell the user at the end.
# Say the number generated by the computer is 1038. An example interaction could look like this:

# Welcome to the Cows and Bulls Game! 
# Enter a number: 
# >>> 1234
# 2 cows, 0 bulls

import random

class result:
    cows = 0
    bulls = 0

def anaylze(num, guess):
    obj = result()
    
    for ele in range (4):
        if num[ele] == guess[ele]: obj.cows += 1
        if guess[ele] in num: obj.bulls += 1

    obj.bulls = obj.bulls - obj.cows
    return obj

def generate_random_number():
    generated_num = ""
    numbers = [0,1,2,3,4,5,6,7,8,9]
    forbidden_numbers = list()

    while len(generated_num) < 4:
        num = random.choice(numbers)
        if num not in forbidden_numbers:
            generated_num = generated_num + str(num)
            forbidden_numbers.append(num)

    return generated_num

def run():
    game_ended = False
    ai_num = generate_random_number()
    tries = 0
    
    while game_ended == False:
        print("\n")
        print(" --- Automatically generated number", ai_num, " --- ")
        guess = input("Hey moron! Choose a 4-digit number and try to guess my number!\n")
        
        if guess == "exit":
            break
        
        result = anaylze(str(ai_num), str(guess))
        if result.cows == 4:
            game_ended = True
        else:
            tries = tries + 1
            print("You have", result.cows, "cows and", result.bulls, "bulls")
    
    print("You won and you tried", tries, "times")


if __name__ == "__main__":
    run()